import minifySvg from './helpers/minifySvgBrowser';
import Promise from 'bluebird';
import template from '../template/icon.nunjucks';
import { cleanupName, cleanupSvg } from './helpers/cleanup';

const defaultComment = 'Generated by gulp svg-icon - do not modify manually';

function readFile(file) {
  const name = file.name;

  return new Promise(resolve => {
    const reader = new FileReader();
    reader.onload = (e) => resolve({ name, content: e.target.result });
    reader.readAsText(file);
  });
}

export default function generateInline(config, svgFiles) {
  const comment = config.comment || defaultComment;
  const reactPureRender = config.reactPureRender;

  const fileReaders = svgFiles.map(file => readFile(file));

  return Promise.all(fileReaders).then(svgs => {
    const svgPromises = svgs.map(file => minifySvg(file.name, file.content));

    return Promise.all(svgPromises).then(results => {
      const icons = results.map(result => {
        return {
          filename: result.filename,
          name: cleanupName(result.name),
          svg: cleanupSvg(result.svg.data)
        };
      }).sort((a, b) => a.name.localeCompare(b.name));

      return {
        icons,
        source: template.render({ icons, comment, reactPureRender })
      };
    });
  });
}
